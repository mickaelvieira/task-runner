#!/bin/bash

#############################################################################
#                              Tasks Runner                                 #
#############################################################################

set -o nounset
set -o errexit
set -o pipefail
#set -x

declare -r VERSION="0.0.1"

declare -r SCRIPT=$(basename $0)
declare -r BASE_DIR="$(dirname $(readlink ${0}))"
declare -r TASKS_DIR="${BASE_DIR}/lib/tasks"

declare -r WORKING_DIR="$(pwd -P)"
declare -r NPM_DIR="${WORKING_DIR}/node_modules/.bin"
declare -r RC_FILE="${WORKING_DIR}/.trunrc"

declare -r CUR_TASK="${1:-}"

declare -ra TASKS=(
    clean
    unwatch
    watch
    watch_js
    watch_css
    watch_test
    test
    build
    build_js
    build_css
)

source "${BASE_DIR}/lib/utils/logger.sh"
source "${BASE_DIR}/lib/tmux.sh"

usage() {
    help+="Usage:\n"
    help+="\t${SCRIPT} [--help] <task>\n"
    help+="Options:\n"
    help+="\t-h Display this help\n"
    help+="Tasks available: \n"
    help+=" \t${TASKS[@]}\n"
    echo -e ${help} 1>&2
    exit 1
}

check_dependencies() {

    local deps=(
        tmux
        npm
        browserify
        exorcist
        watchify
        uglifyjs
        karma
        mocha
        phantomjs
    )

    for dep in ${deps[@]}
    do
        command -v "${dep}" > /dev/null 2>&1 || \
            error "'${dep}' is required but it is not installed."
    done
}

add_npm_bin_to_path() {

    [[ ! -d "${NPM_DIR}" ]] && \
        error "Cannot find node binaries in '${NPM_DIR}'!"

    export PATH="${NPM_DIR}:$PATH"
}

include_task_scripts() {

    local task_script=""
    for task in ${TASKS[*]}
    do
        task_script="${TASKS_DIR}/${task}.sh"

        [[ ! -f "${task_script}" ]] && \
            error "'${item}' script is missing in '${TASKS_DIR}'!"

        source "${task_script}"
    done
}

include_conf() {

    [[ ! -f "${RC_FILE}" ]] && \
        error "Configuration file '${RC_FILE}' is missing!"

    source "${RC_FILE}"
}


#is_valid_task() {
#
#    local needle="${1}"
#    shift
#    local haystack=("${@}")
#    local found=""
#
#    for t in "${TASKS[@]}"
#    do
#        if [[ "${t}" == "${needle}" ]]
#        then
#            found="${t}"
#            break
#        fi
#    done
#
#    echo ${found}
#}


main() {

    # Display the command help screen
    if [[ "${CUR_TASK}" == "--help" || "${CUR_TASK}" == "-h" ]]
    then
        usage
    fi

    # Let's get started
    info "${SCRIPT}@${VERSION} ${WORKING_DIR}"

    add_npm_bin_to_path
    check_dependencies
    include_conf
    include_task_scripts

    #declare -a entries=($(find ./html/js -name index.js))

    eval "${CUR_TASK}"
}

main

exit 0

